# Generated by Django 3.2 on 2021-08-31 13:32

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import django_resized.forms


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0013_alter_user_email'),
    ]

    operations = [
        migrations.CreateModel(
            name='Connect4ProUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='email address')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='Имя')),
                ('last_name', models.CharField(blank=True, max_length=30, verbose_name='Фамилия')),
                ('birth_date', models.DateField(null=True, verbose_name='Дата рождения')),
                ('gender', models.CharField(blank=True, max_length=8, verbose_name='Пол')),
                ('country', models.CharField(blank=True, max_length=25, verbose_name='Страна')),
                ('city', models.CharField(blank=True, max_length=40, verbose_name='Город/Село')),
                ('phone', models.CharField(blank=True, max_length=20, verbose_name='Телефон')),
                ('telegram', models.CharField(blank=True, max_length=20, verbose_name='Telegram')),
                ('site', models.CharField(blank=True, max_length=50, verbose_name='Сайт/Соцсети')),
                ('avatar', django_resized.forms.ResizedImageField(blank=True, crop=None, default='images/users/avatars/avatardefault_92824.png', force_format='JPEG', keep_meta=True, null=True, quality=100, size=[350, 350], upload_to='images/users/avatars/%d%m%Y')),
                ('is_premium', models.BooleanField(default=False, verbose_name='Премиум-статус')),
                ('start_date', models.DateTimeField(blank=True, null=True, verbose_name='Дата начала премиум')),
                ('end_date', models.DateTimeField(blank=True, null=True, verbose_name='Дата окончания премиум')),
                ('is_business', models.BooleanField(default=False, verbose_name='Профиль МСБ')),
                ('is_provider', models.BooleanField(default=False, verbose_name='Профиль провайдера')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Knowledge',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=300, verbose_name='Название')),
            ],
            options={
                'verbose_name': 'Знание',
                'verbose_name_plural': 'Знания',
            },
        ),
        migrations.CreateModel(
            name='Method',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=300, verbose_name='Название')),
            ],
            options={
                'verbose_name': 'Методология',
                'verbose_name_plural': 'Методологии',
            },
        ),
        migrations.CreateModel(
            name='Sector',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, default='', max_length=300, null=True, verbose_name='Название')),
            ],
            options={
                'verbose_name': 'Сектор деятельности',
                'verbose_name_plural': 'Секторы деятельности',
            },
        ),
        migrations.CreateModel(
            name='Skill',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=300, verbose_name='Название')),
            ],
            options={
                'verbose_name': 'Навык',
                'verbose_name_plural': 'Навыки',
            },
        ),
        migrations.CreateModel(
            name='ProviderProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('knowledge', models.ManyToManyField(blank=True, to='users.Knowledge', verbose_name='Знания')),
                ('methods', models.ManyToManyField(blank=True, to='users.Method', verbose_name='Методологии')),
                ('skills', models.ManyToManyField(blank=True, related_name='skills', to='users.Skill', verbose_name='Навыки')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='provider_profile', to=settings.AUTH_USER_MODEL, verbose_name='Пользователь')),
            ],
            options={
                'verbose_name': 'Профиль консультанта',
                'verbose_name_plural': 'Профили консультантов',
            },
        ),
        migrations.CreateModel(
            name='BusinessProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('turnover', models.CharField(blank=True, max_length=20, verbose_name='Примерный оборот')),
                ('employers', models.PositiveSmallIntegerField(blank=True, default=1, verbose_name='Число сотрудников')),
                ('category', models.CharField(blank=True, max_length=60, verbose_name='Категориясотрудников')),
                ('sector', models.ManyToManyField(blank=True, to='users.Sector', verbose_name='Сектор деятельности')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='business_profile', to=settings.AUTH_USER_MODEL, verbose_name='Пользователь')),
            ],
            options={
                'verbose_name': 'Профиль МСБ',
                'verbose_name_plural': 'Профили МСБ',
            },
        ),
    ]
